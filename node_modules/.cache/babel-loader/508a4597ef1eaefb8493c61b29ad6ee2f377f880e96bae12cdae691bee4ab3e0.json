{"ast":null,"code":"export default {\n  props: {\n    radius: {\n      type: Number,\n      default: 50\n    }\n  },\n  watch: {\n    radius() {\n      this.draw(this.radius);\n    }\n  },\n  methods: {\n    draw(radius) {\n      // this.paste_img()\n      this.logx();\n      this.ctx.beginPath();\n      this.ctx.clearRect(0, 0, 200, 200);\n      this.ctx.arc(100, 100, radius, 0, Math.PI * 2);\n      this.ctx.fill();\n    },\n    logx() {\n      console.log('きてるよー');\n    }\n    // paste_img(pasteEvent) {\n    // //最初のアイテムを検討します(複数のアイテムに簡単に拡張できます)\n    // var item = pasteEvent.clipboardData.items[0];\n\n    // if (item.type.indexOf(\"image\") === 0)\n    // {\n    //     var blob = item.getAsFile();\n\n    //     var reader = new FileReader();\n    //     reader.onload = function(event) {\n    //         document.getElementById(\"container\").src = event.target.result;\n    //     };\n\n    //     reader.readAsDataURL(blob);\n    // }\n  },\n\n  mounted() {\n    // mounted 以降で canvas の DOM にアクセスできる\n    // CreateJS などを使うときにも、ここで canvas と紐付ける\n    // console.log(this.$el)\n    this.ctx = this.$el.getContext('2d');\n    this.draw(this.radius);\n  }\n};","map":{"version":3,"mappings":"AAQA;EACAA;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAH;MACA;IACA;EACA;EACAI;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACAC;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;EACA;;EAKAC;IACA;IACA;IACA;IACA;IACA;EACA;AACA","names":["props","radius","type","default","watch","methods","draw","logx","console","mounted"],"sourceRoot":"src","sources":["MyCanvas.vue"],"sourcesContent":["<template>\n  <div>\n    <canvas width=\"200\" height=\"200\" class=\"canvas\"></canvas>\n    <!-- <button>hello</button> -->\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    radius: {\n      type: Number,\n      default: 50\n    }\n  },\n  watch: {\n    radius() {\n      this.draw(this.radius)\n   }\n  },\n  methods: {\n    draw(radius) {\n      // this.paste_img()\n      this.logx()\n      this.ctx.beginPath()\n      this.ctx.clearRect(0, 0, 200, 200)\n      this.ctx.arc(100, 100, radius, 0, Math.PI * 2)\n      this.ctx.fill()\n    },\n    logx(){\n      console.log('きてるよー')\n    },\n    // paste_img(pasteEvent) {\n    // //最初のアイテムを検討します(複数のアイテムに簡単に拡張できます)\n    // var item = pasteEvent.clipboardData.items[0];\n \n    // if (item.type.indexOf(\"image\") === 0)\n    // {\n    //     var blob = item.getAsFile();\n \n    //     var reader = new FileReader();\n    //     reader.onload = function(event) {\n    //         document.getElementById(\"container\").src = event.target.result;\n    //     };\n \n    //     reader.readAsDataURL(blob);\n    // }\n  },\n\n\n\n\n  mounted() {\n    // mounted 以降で canvas の DOM にアクセスできる\n    // CreateJS などを使うときにも、ここで canvas と紐付ける\n    // console.log(this.$el)\n    this.ctx = this.$el.getContext('2d')\n    this.draw(this.radius)\n  }\n}\n</script>\n\n<style scoped>\n.canvas {\n  border: 1px solid #000;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}