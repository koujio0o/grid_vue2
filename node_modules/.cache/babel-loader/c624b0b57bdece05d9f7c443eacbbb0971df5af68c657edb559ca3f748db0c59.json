{"ast":null,"code":"export default {\n  props: {\n    radius: {\n      type: Number,\n      default: 50\n    }\n  },\n  watch: {\n    radius() {\n      this.draw(this.radius);\n    }\n  },\n  methods: {\n    draw(radius) {\n      // this.paste_img()\n      this.logx();\n      this.ctx.beginPath();\n      this.ctx.clearRect(0, 0, 200, 200);\n      this.ctx.arc(100, 100, radius, 0, Math.PI * 2);\n      this.ctx.fill();\n    },\n    logx() {\n      console.log('きてるよー');\n    },\n    paste(pasteEvent) {\n      console.log(pasteEvent);\n      var item = pasteEvent.clipboardData.items[0];\n      if (item.type.indexOf(\"image\") === 0) {\n        var blob = item.getAsFile();\n        var reader = new FileReader();\n        reader.onload = function (event) {\n          document.getElementById(\"container\").src = event.target.result;\n        };\n        reader.readAsDataURL(blob);\n      }\n    }\n    // paste_img(pasteEvent) {\n    // //最初のアイテムを検討します(複数のアイテムに簡単に拡張できます)\n    // var item = pasteEvent.clipboardData.items[0];\n\n    // if (item.type.indexOf(\"image\") === 0)\n    // {\n    //     var blob = item.getAsFile();\n\n    //     var reader = new FileReader();\n    //     reader.onload = function(event) {\n    //         document.getElementById(\"container\").src = event.target.result;\n    //     };\n\n    //     reader.readAsDataURL(blob);\n    // }\n  },\n\n  mounted() {\n    // mounted 以降で canvas の DOM にアクセスできる\n    // CreateJS などを使うときにも、ここで canvas と紐付ける\n    console.log(this.$el);\n    this.ctx = this.$refs._canvas.getContext('2d');\n    this.draw(this.radius);\n    window.addEventListener('paste', pasteEvent => {\n      pasteEvent.preventDefault();\n      console.log('uhohoi');\n      console.log(pasteEvent);\n      var item = pasteEvent.clipboardData.items[0];\n      if (item.type.indexOf(\"image\") === 0) {\n        var blob = item.getAsFile();\n        var reader = new FileReader();\n        reader.onload = function (event) {\n          console.log('patste-----');\n          document.getElementById(\"pastearea\").src = event.target.result;\n          // $refs.pastearea.src = event.target.result\n        };\n\n        reader.readAsDataURL(blob);\n      }\n    });\n  }\n};","map":{"version":3,"mappings":"AAgBA;EACAA;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAH;MACA;IACA;EACA;EACAI;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACAC;IACA;IACAC;MACAD;MACA;MAEA;QACA;QAEA;QACAE;UACAC;QACA;QAEAD;MACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;EACA;;EAKAE;IACA;IACA;IACAJ;IACA;IACA;IAEAK;MACAC;MACAN;MACAA;MACA;MAEA;QACA;QAEA;QACAE;UACAF;UACAG;UACA;QACA;;QAEAD;MACA;IACA;EAEA;AACA","names":["props","radius","type","default","watch","methods","draw","logx","console","paste","reader","document","mounted","window","pasteEvent"],"sourceRoot":"src","sources":["MyCanvas.vue"],"sourcesContent":["<template>\n  <div ref=\"xxx\">\n    <canvas ref=\"_canvas\" width=\"200\" height=\"200\" class=\"canvas\"></canvas>\n    <button v-on:click=\"paste\">hello</button>\n    <div  ref=\"pastearea\" @paste=\"paste\" contenteditable=\"true\"\n      style=\"width:200px; padding:20px 0px; text-align:center; background:#fcc;\">\n\n      ここで右クリックを押して<br>\n      貼り付けて下さい\n\n    </div>\n    <div><img id=\"pastearea\" src=\"\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    radius: {\n      type: Number,\n      default: 50\n    }\n  },\n  watch: {\n    radius() {\n      this.draw(this.radius)\n    }\n  },\n  methods: {\n    draw(radius) {\n      // this.paste_img()\n      this.logx()\n      this.ctx.beginPath()\n      this.ctx.clearRect(0, 0, 200, 200)\n      this.ctx.arc(100, 100, radius, 0, Math.PI * 2)\n      this.ctx.fill()\n    },\n    logx() {\n      console.log('きてるよー')\n    },\n    paste(pasteEvent) {\n      console.log(pasteEvent)\n      var item = pasteEvent.clipboardData.items[0];\n\n      if (item.type.indexOf(\"image\") === 0) {\n        var blob = item.getAsFile();\n\n        var reader = new FileReader();\n        reader.onload = function (event) {\n          document.getElementById(\"container\").src = event.target.result;\n        };\n\n        reader.readAsDataURL(blob);\n      }\n    },\n    // paste_img(pasteEvent) {\n    // //最初のアイテムを検討します(複数のアイテムに簡単に拡張できます)\n    // var item = pasteEvent.clipboardData.items[0];\n\n    // if (item.type.indexOf(\"image\") === 0)\n    // {\n    //     var blob = item.getAsFile();\n\n    //     var reader = new FileReader();\n    //     reader.onload = function(event) {\n    //         document.getElementById(\"container\").src = event.target.result;\n    //     };\n\n    //     reader.readAsDataURL(blob);\n    // }\n  },\n\n\n\n\n  mounted() {\n    // mounted 以降で canvas の DOM にアクセスできる\n    // CreateJS などを使うときにも、ここで canvas と紐付ける\n    console.log(this.$el)\n    this.ctx = this.$refs._canvas.getContext('2d')\n    this.draw(this.radius)\n\n    window.addEventListener('paste', (pasteEvent) => {\n      pasteEvent.preventDefault();\n      console.log('uhohoi')\n      console.log(pasteEvent)\n      var item = pasteEvent.clipboardData.items[0];\n\n      if (item.type.indexOf(\"image\") === 0) {\n        var blob = item.getAsFile();\n\n        var reader = new FileReader();\n        reader.onload = function (event) {\n          console.log('patste-----')\n          document.getElementById(\"pastearea\").src = event.target.result;\n          // $refs.pastearea.src = event.target.result\n        };\n\n        reader.readAsDataURL(blob);\n      }\n    })\n\n  }\n}\n</script>\n\n<style scoped>\n.canvas {\n  border: 1px solid #000;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}